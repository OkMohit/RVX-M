name: Build RVX APK 
on: 
  workflow_call:
    secrets:
      TELEGRAM_TOKEN:
        description: 'Telegram Bot Token'
        required: true
      TELEGRAM_TO:
        description: 'Telegram Chat ID'
        required: true
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Get next version code
        id: next_ver_code
        run: |
          TAG=$(git tag --sort=creatordate | tail -1)
          if [ -z "$TAG" ]; then TAG=0; fi
          echo "NEXT_VER_CODE=$((TAG + 1))" >> $GITHUB_OUTPUT

      - name: Building RVX APK
        run: ./build.sh build
        env:
          GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          NEXT_VER_CODE: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}

      - name: Get output
        id: get_output
        run: |
          BUILD_LOG=$(cat build.md)

          echo "BUILD_LOG<<EOF" >> $GITHUB_ENV
          echo "$BUILD_LOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          cd build
          yt_op=$(find . -maxdepth 1 -name "youtube-revanced-magisk-*.zip" -printf '%P')
          echo "YT_OUTPUT=$yt_op" >> $GITHUB_OUTPUT
          echo "RELEASE_NAME=$(date +'v%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "MUSIC_OUTPUT_ARM64=$(find . -maxdepth 1 -name "music-revanced-magisk-*-arm64-v8a.zip" -printf '%P')" >> $GITHUB_OUTPUT
          echo "MUSIC_OUTPUT_ARM=$(find . -maxdepth 1 -name "music-revanced-magisk-*-arm-v7a.zip" -printf '%P')" >> $GITHUB_OUTPUT

      - name: Upload modules to release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ${{ env.BUILD_LOG }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/*
          release_name: ${{ steps.get_output.outputs.RELEASE_NAME }}
          tag: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}
          file_glob: true
          overwrite: false

      - name: Switch to update branch
        run: git checkout -f update || git switch --discard-changes --orphan update

      
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: update
          skip_checkout: true
          file_pattern: build.md *.json
          commit_message: Bump version ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}
          
          
